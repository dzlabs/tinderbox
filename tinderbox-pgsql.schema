-- DROP TABLE ports CASCADE;
CREATE TABLE ports (
	Port_Id SERIAL PRIMARY KEY NOT NULL,
	Port_Directory VARCHAR(255) UNIQUE NOT NULL,
	Port_Name VARCHAR(64),
	Port_Maintainer VARCHAR(128),
	Port_Comment VARCHAR(255)
);

-- DROP TABLE jails CASCADE;
CREATE TABLE jails (
	Jail_Id SERIAL PRIMARY KEY NOT NULL,
	Jail_Name VARCHAR(32) UNIQUE NOT NULL,
	Jail_Tag VARCHAR(32),
	Jail_Last_Built TIMESTAMP,
	Jail_Update_Cmd VARCHAR(255) DEFAULT 'CVSUP',
	Jail_Description TEXT,
	Jail_Src_Mount TEXT
);

-- DROP TABLE ports_trees CASCADE;
CREATE TABLE ports_trees (
	Ports_Tree_Id SERIAL PRIMARY KEY NOT NULL,
	Ports_Tree_Name VARCHAR(32) UNIQUE NOT NULL,
	Ports_Tree_Description TEXT,
	Ports_Tree_Last_Built TIMESTAMP,
	Ports_Tree_Update_Cmd VARCHAR(255) DEFAULT 'CVSUP',
	Ports_Tree_CVSweb_URL VARCHAR(255),
	Ports_Tree_Ports_Mount TEXT
);

-- DROP TABLE builds CASCADE;
CREATE TABLE builds (
	Build_Id SERIAL PRIMARY KEY NOT NULL,
	Build_Name VARCHAR(32) UNIQUE NOT NULL,
	Jail_Id INTEGER REFERENCES Jails(Jail_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	Ports_Tree_Id INTEGER REFERENCES ports_trees(Ports_Tree_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	Build_Description TEXT,
	Build_Status VARCHAR(16) CHECK (Build_Status IN ('IDLE','PREPARE','PORTBUILD')) DEFAULT 'IDLE',
	Build_Current_Port VARCHAR(255)
);

-- DROP TABLE users CASCADE;
CREATE TABLE users (
	User_Id SERIAL PRIMARY KEY NOT NULL,
	User_Name VARCHAR(16) UNIQUE NOT NULL,
	User_Email VARCHAR(255),
	User_Password VARCHAR(41),
	User_Www_Enabled BOOLEAN NOT NULL default FALSE
);

-- DROP TABLE hosts CASCADE;
CREATE TABLE hosts (
	Host_Id SERIAL PRIMARY KEY NOT NULL,
	Host_Name VARCHAR(255) NOT NULL
);
CREATE INDEX hosts_host_name_idx ON hosts(Host_Name);

-- DROP TABLE user_permissions CASCADE;
CREATE TABLE user_permissions (
	User_Id INTEGER REFERENCES users(User_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	Host_Id INTEGER REFERENCES hosts(Host_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	User_Permission_Object_Type VARCHAR(16) CHECK (User_Permission_Object_Type IN ('builds', 'users')),
	User_Permission_Object_Id INTEGER NOT NULL DEFAULT '0',
	User_Permission INTEGER NOT NULL DEFAULT '0',
	PRIMARY KEY  (User_Id,User_Permission_Object_Type,User_Permission_Object_Id,User_Permission,Host_Id)
);

-- DROP TABLE build_users CASCADE;
CREATE TABLE build_users (
	Build_User_Id SERIAL PRIMARY KEY NOT NULL,
	Build_Id INTEGER REFERENCES builds(Build_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	User_Id INTEGER REFERENCES users(User_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	Email_On_Completion BOOLEAN DEFAULT TRUE,
	Email_On_Error BOOLEAN DEFAULT TRUE
);

-- DROP TABLE build_ports CASCADE;
CREATE TABLE build_ports (
	Build_Port_Id SERIAL PRIMARY KEY NOT NULL,
	Build_Id INTEGER REFERENCES builds(Build_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	Port_Id INTEGER REFERENCES ports(Port_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	Last_Built TIMESTAMP,
	Last_Status VARCHAR(16) CHECK (Last_Status IN ('UNKNOWN','SUCCESS','FAIL','BROKEN', 'LEFTOVERS')) DEFAULT 'UNKNOWN',
	Last_Successful_Built TIMESTAMP,
	Last_Built_Version VARCHAR(100)
);

-- DROP TABLE config CASCADE;
CREATE TABLE config (
	Config_Option_Name VARCHAR(255) NOT NULL,
	Config_Option_Value TEXT,
	Host_Id INTEGER REFERENCES hosts(Host_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY (Config_Option_Name, Host_Id)
);

-- DROP TABLE build_ports_queue CASCADE;
CREATE TABLE build_ports_queue (
	Build_Ports_Queue_Id SERIAL PRIMARY KEY NOT NULL,
	Enqueue_Date TIMESTAMP,
	Completion_Date TIMESTAMP,
	Build_Id INTEGER REFERENCES builds(Build_Id) ON UPDATE CASCADE,
	User_Id INTEGER REFERENCES users(User_Id) ON UPDATE CASCADE ON DELETE RESTRICT,
	Port_Directory VARCHAR(255) NOT NULL,
	Priority INTEGER NOT NULL DEFAULT '10',
	Host_Id INTEGER REFERENCES hosts(Host_Id) ON UPDATE CASCADE,
	Email_On_Completion BOOLEAN NOT NULL,
	Status VARCHAR(16) CHECK (Status IN ('ENQUEUED','PROCESSING','SUCCESS','FAIL')) DEFAULT 'ENQUEUED'
);
CREATE INDEX build_ports_queue_host_id_idx ON build_ports_queue(Host_Id);
CREATE INDEX build_ports_queue_user_id_idx ON build_ports_queue(User_Id);

INSERT INTO hosts VALUES (-1, '__ALL__');

----
-- Supported config commands.  If any new commands are added here,
-- __DSVERSION__ must be bumped.  Use micro version bumps for new config
-- commands, and minor version bumps for schema changes.
----
INSERT INTO config VALUES ('__DSVERSION__', '2.1.1', -1);
INSERT INTO config VALUES ('CCACHE_ENABLED', '0', -1);
INSERT INTO config VALUES ('CCACHE_DIR', '', -1);
INSERT INTO config VALUES ('CCACHE_NOLINK', '1', -1);
INSERT INTO config VALUES ('CCACHE_MAX_SIZE', '1G', -1);
INSERT INTO config VALUES ('CCACHE_JAIL', '0', -1);
INSERT INTO config VALUES ('CCACHE_LOGFILE', '', -1);
INSERT INTO config VALUES ('DISTFILE_CACHE', '', -1);
INSERT INTO config VALUES ('TINDERD_SLEEPTIME', '120', -1);
INSERT INTO config VALUES ('JAIL_OBJDIR', '', -1);
