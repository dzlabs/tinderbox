SET FOREIGN_KEY_CHECKS=0;

DROP TABLE IF EXISTS ports;
CREATE TABLE ports (
  port_id int NOT NULL auto_increment,
  port_directory varchar(255) NOT NULL,
  port_name varchar(64),
  port_maintainer varchar(128),
  port_comment varchar(255),
  PRIMARY KEY (port_id),
  UNIQUE (port_directory),
  INDEX port_directory_idx (port_directory)
) TYPE=INNODB;

DROP TABLE IF EXISTS jails;
CREATE TABLE jails (
  jail_id int NOT NULL auto_increment,
  jail_name varchar(32) NOT NULL,
  jail_tag varchar(32),
  jail_last_built datetime,
  jail_update_cmd varchar(255) DEFAULT 'CVSUP',
  jail_description text,
  jail_src_mount text,
  PRIMARY KEY (jail_id),
  UNIQUE (jail_name),
  INDEX jail_name_idx (jail_name)
) TYPE=INNODB;

DROP TABLE IF EXISTS ports_trees;
CREATE TABLE ports_trees (
  ports_tree_id int NOT NULL auto_increment,
  ports_tree_name varchar(32) NOT NULL,
  ports_tree_description text,
  ports_tree_last_built datetime,
  ports_tree_update_cmd varchar(255) DEFAULT 'CVSUP',
  ports_tree_cvsweb_url varchar(255),
  ports_tree_ports_mount text,
  PRIMARY KEY (ports_tree_id),
  UNIQUE (ports_tree_name),
  INDEX ports_tree_name_idx (ports_tree_name)
) TYPE=INNODB;

DROP TABLE IF EXISTS builds;
CREATE TABLE builds (
  build_id int NOT NULL auto_increment,
  build_name varchar(32) NOT NULL,
  jail_id int NOT NULL,
  ports_tree_id int NOT NULL,
  build_description text,
  build_status enum('IDLE','PREPARE','PORTBUILD') DEFAULT 'IDLE',
  build_current_port varchar(255),
  PRIMARY KEY (build_id),
  UNIQUE (build_name),
  INDEX build_name_idx (build_name),
  INDEX (jail_id),
  FOREIGN KEY (jail_id)
    REFERENCES jails(jail_id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  INDEX (ports_tree_id),
  FOREIGN KEY (ports_tree_id)
    REFERENCES ports_trees(ports_tree_id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) TYPE=INNODB;

DROP TABLE IF EXISTS users;
CREATE TABLE users (
  user_id int NOT NULL auto_increment,
  user_name varchar(16) NOT NULL,
  user_email varchar(255),
  user_password varchar(41),
  user_www_enabled tinyint(1) NOT NULL default '0',
  PRIMARY KEY (user_id),
  UNIQUE (user_name),
  INDEX user_name_idx (user_name)
) TYPE=INNODB;

DROP TABLE IF EXISTS user_permissions;
CREATE TABLE IF NOT EXISTS user_permissions (
  user_id int(11) NOT NULL,
  host_id int(11) NOT NULL,
  user_permission_object_type enum('builds','users') NOT NULL,
  user_permission_object_id int(11) NOT NULL default '0',
  user_permission int(11) NOT NULL default '0',
  PRIMARY KEY  (user_id,user_permission_object_type,user_permission_object_id,user_permission,host_id),
  INDEX (user_id),
  FOREIGN KEY (user_id)
    REFERENCES users(user_id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) TYPE=INNODB;

DROP TABLE IF EXISTS build_users;
CREATE TABLE build_users (
  build_user_id int NOT NULL auto_increment,
  build_id int NOT NULL,
  user_id int NOT NULL,
  email_on_completion tinyint(1) DEFAULT 1,
  email_on_error tinyint(1) DEFAULT 1,
  PRIMARY KEY (build_user_id),
  INDEX (build_id),
  FOREIGN KEY (build_id)
    REFERENCES builds(build_id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  INDEX (user_id),
  FOREIGN KEY (user_id)
    REFERENCES users(user_id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) TYPE=INNODB;

DROP TABLE IF EXISTS build_ports;
CREATE TABLE build_ports (
  build_port_id int NOT NULL auto_increment,
  build_id int NOT NULL,
  port_id int NOT NULL,
  last_built datetime,
  last_status enum('UNKNOWN','SUCCESS','FAIL','BROKEN', 'LEFTOVERS') DEFAULT 'UNKNOWN',
  last_successful_built datetime,
  last_built_version varchar(100),
  PRIMARY KEY (build_port_id),
  INDEX (build_id),
  FOREIGN KEY (build_id)
    REFERENCES builds(build_id)
    ON UPDATE CASCADE ON DELETE RESTRICT,
  INDEX (port_id),
  FOREIGN KEY (port_id)
    REFERENCES ports(port_id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) TYPE=INNODB;

DROP TABLE IF EXISTS hosts;
CREATE TABLE hosts (
  host_id int NOT NULL auto_increment,
  host_name varchar(255) NOT NULL,
  PRIMARY KEY (host_id),
  KEY host_name (host_name)
) TYPE=INNODB;

DROP TABLE IF EXISTS config;
CREATE TABLE config (
  config_option_name varchar(255) NOT NULL,
  config_option_value text,
  host_id int NOT NULL DEFAULT -1,
  PRIMARY KEY (config_option_name, host_id),
  INDEX (host_id),
  FOREIGN KEY (host_id)
    REFERENCES hosts(host_id)
    ON UPDATE CASCADE ON DELETE RESTRICT
) TYPE=INNODB;

DROP TABLE IF EXISTS build_ports_queue;
CREATE TABLE build_ports_queue (
  build_ports_queue_id int(11) NOT NULL auto_increment,
  enqueue_date datetime,
  completion_date datetime,
  build_id int NOT NULL,
  user_id int NOT NULL,
  port_directory varchar(255) NOT NULL,
  priority int NOT NULL default '10',
  host_id int NOT NULL,
  email_on_completion tinyint(1) NOT NULL,
  status enum('ENQUEUED','PROCESSING','SUCCESS','FAIL') NOT NULL default 'ENQUEUED',
  PRIMARY KEY (build_ports_queue_id),
  KEY Host_Id (host_id),
  KEY user_id (user_id),
  FOREIGN KEY (build_id)
    REFERENCES builds (build_id)
    ON UPDATE CASCADE,
  FOREIGN KEY (host_id)
    REFERENCES hosts (host_id)
    ON UPDATE CASCADE
) TYPE=INNODB;

INSERT INTO hosts VALUES (-1, '__ALL__');

##
# Supported config commands.  If any new commands are added here,
# __DSVERSION__ must be bumped.  Use micro version bumps for new config
# commands, and minor version bumps for schema changes.
##
INSERT INTO config VALUES ('__DSVERSION__', '3.0', -1);
INSERT INTO config VALUES ('CCACHE_ENABLED', '0', -1);
INSERT INTO config VALUES ('CCACHE_DIR', '', -1);
INSERT INTO config VALUES ('CCACHE_NOLINK', '1', -1);
INSERT INTO config VALUES ('CCACHE_MAX_SIZE', '1G', -1);
INSERT INTO config VALUES ('CCACHE_JAIL', '0', -1);
INSERT INTO config VALUES ('CCACHE_LOGFILE', '', -1);
INSERT INTO config VALUES ('DISTFILE_CACHE', '', -1);
INSERT INTO config VALUES ('TINDERD_SLEEPTIME', '120', -1);
INSERT INTO config VALUES ('JAIL_OBJDIR', '', -1);


SET FOREIGN_KEY_CHECKS=1;
