#!/bin/sh
#-
# Copyright (c) 2004-2005 FreeBSD GNOME Team <freebsd-gnome@FreeBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $MCom: portstools/tinderbox/create_new_jail,v 1.14 2005/07/10 07:25:59 oliver Exp $
#


usage () {
    echo "usage: $0 -n <jail name> -t <jail tag> [-d <description>] [-u <update command|CVSUP|NONE>]"
    exit 1
}

if [ `id -u` != 0 ]; then
    echo "ERROR: You must be root to run $0."
    exit 1
fi

pb=$0
[ -z "$(echo "${pb}" | sed 's![^/]!!g')" ] && \
pb=$(type "$pb" | sed 's/^.* //g')
pb=$(realpath $(dirname $pb))
pb=${pb%%/scripts}

. ${pb}/scripts/tinderbox_shlib.sh

suphost=cvsup12.FreeBSD.org
cvsup_compress= #*default compress

jail_name=""
jail_tag=""
descr=""
update_cmd=""

while [ $# -gt 0 ]; do
    case "x$1" in
	x-n)
	  jail_name="$2"; shift;
	  ;;
	x-t)
	  jail_tag="$2"; shift;
	  ;;
	x-d)
	  descr="$2"; shift;
	  ;;
	x-u)
	  update_cmd="$2"; shift;
	  ;;
	*)
	  usage
	  ;;
    esac
    shift
done

if [ -z "${jail_name}" -o -z "${jail_tag}" ]; then
    usage
fi

valid_jail_name=$(echo ${jail_name} | awk '{if (/^[[:digit:]]/) {print;}}')

if [ -z "${valid_jail_name}" ]; then
    echo "ERROR: The first character in a jail name must be a FreeBSD major version number." | /usr/bin/fmt 75 79
    exit 1
fi

_jails=$(${pb}/scripts/tc listJails)
if echo ${_jails} | grep -qw ${jail_name}; then
    echo "ERROR: Jail, \"${jail_name}\" already exists."
    exit 1
fi

echo -n "INFO: Creating directories and supfile for new jail..."
cleanup_mounts -d jail -j ${jail_name}
rm -rf ${pb}/jails/${jail_name}

mkdir -p ${pb}/jails/${jail_name}/src

request_mount -q -d jail -p ${jail_name}

cat > ${pb}/jails/${jail_name}/src-supfile << EOSF
*default host=${suphost}
*default base=${pb}/jails/${jail_name}
*default prefix=${pb}/jails/${jail_name}
*default release=cvs tag=${jail_tag}
*default delete use-rel-suffix
${cvsup_compress}
src-all
EOSF

echo "DONE."

# Add the new jail to the datastore.
echo -n "INFO: Adding jail to datastore..."
if [ ! -z "${descr}" ]; then
    descr="-d ${descr}"
fi
if [ ! -z "${update_cmd}" ]; then
    update_cmd="-u ${update_cmd}"
fi
${pb}/scripts/tc addJail -n ${jail_name} -t ${jail_tag} ${update_cmd} "${descr}"

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

echo "INFO: Initializing new jail..."
${pb}/scripts/mkjail ${jail_name}

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

exit 0
