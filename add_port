#!/usr/bin/perl

use strict;
use TinderboxDS;
use Getopt::Std;
use vars qw(
    $BUILD_ROOT
);

require "tinderbox.ph";
require "buildenv.pl";

my $opts = {};

getopts('j:or', $opts);

if (!(scalar @ARGV) || !$opts->{'j'}) {
        die "usage: $0 -j jail [-o] [-r] <category/port> ...\n";
}

my $ds = new TinderboxDS();

my $jail = $opts->{'j'};
if (!$ds->isValidJail($jail)) {
        die "ERROR: Unknown jail, $jail\n";
}

buildenv($BUILD_ROOT, $jail);

if ($opts->{'r'}) {
        my @deps = ();
        addPorts(\@ARGV, $jail, $opts->{'o'}, \@deps);
        addPorts(\@deps, $jail, $opts->{'o'}, undef);
} else {
        addPorts(\@ARGV, $jail, $opts->{'o'}, undef);
}

$ds->destroy();
exit(0);

sub addPorts {
        my $ports       = shift;
        my $jail        = shift;
        my $onlyForJail = shift;
        my $deps        = shift;

        foreach my $port (@{$ports}) {
                my $portdir = $ENV{'PORTSDIR'} . "/" . $port;
                next if (!-d $portdir);

                my ($portname, $portcomment) =
                    `cd $portdir && make -V PORTNAME -V COMMENT`;
                chomp $portname;
                chomp $portcomment;

                if (defined($deps)) {

                        # We need to add all ports on which this port depends
                        # recursively.
                        my @deplist = `cd $portdir && make all-depends-list`;
                        foreach my $dep (@deplist) {
                                chomp $dep;
                                $dep =~ s|^$ENV{'PORTSDIR'}/||;
                                push @{$deps}, $dep;
                        }
                }

                $portdir =~ s|^$ENV{'PORTSDIR'}/||;

                my $pCls = new Port(
                        {
                                Directory => $portdir,
                                Name      => $portname,
                                Comment   => $portcomment
                        }
                );

                # Only add the port if it isn't already in the datastore.
                my $rc;
                if (!$ds->isPortInDS($pCls)) {
                        $rc = $ds->addPort(\$pCls);
                        if (!$rc) {
                                warn "WARN: Failed to add port "
                                    . $pCls->getDirectory() . ": "
                                    . $ds->getError() . "\n";
                        }
                }

                if ($onlyForJail) {

                        # This port should only be built for _this_ jail.
                        $rc =
                            $ds->addPortForJail($pCls,
                                $ds->getJailByName($jail));
                        if (!$rc) {
                                warn "WARN: Failed to add port for jail, "
                                    . $jail->getName() . ": "
                                    . $ds->getError() . "\n";
                        }
                }
        }
}

