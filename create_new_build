#!/bin/sh
#-
# Copyright (c) 2004 FreeBSD GNOME Team <freebsd-gnome@FreeBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $Id: create_new_build,v 1.5 2004/03/26 05:10:33 marcus Exp $
#


usage () {
    echo "usage: $0 -n <build name> -j <jail name> -p <portstree name> [-d <build description>]"
    exit 1
}

if [ `id -u` != 0 ]; then
    echo "ERROR: You must be root to run $0."
    exit 1
fi

pb=/space

buil_name=""
jail=""
portstree=""
descr=""

while [ $# -gt 0 ]; do
    case "x$1" in
	x-n)
	  build_name="$2"; shift;
	  ;;
	x-j)
	  jail="$2"; shift;
	  ;;
	x-p)
	  portstree="$2"; shift;
	  ;;
	x-d)
	  descr="$2"; shift;
	  ;;
	*)
	  usage
	  ;;
    esac
    shift
done

if [ -z "${build_name}" -o -z "${jail}" -o -z "${portstree}" ]; then
    usage
fi

_builds=$(${pb}/scripts/tc listBuilds 2> /dev/null)
found=0
for _build in ${_builds}; do
    if [ "${_build}" = "${build_name}" ]; then
	found=1
	break
    fi
done
if [ ${found} = 0 ]; then
    echo "ERROR: Build, \"${build_name}\" already exists."
    exit 1
fi

echo -n "INFO: Creating directories for new build..."
rm -rf ${pb}/builds/${build_name}
rm -rf ${pb}/${build_name}

mkdir -p ${pb}/builds/${build_name}
mkdir -p ${pb}/${build_name}

echo "DONE."

# Add the new build to the datastore.
echo -n "INFO: Adding build to datastore..."
if [ ! -z "${descr}" ]; then
    descr="-d ${descr}"
fi
${pb}/scripts/tc addBuild -n ${build_name} -j ${jail} -p ${portstree} "${descr}"

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

echo -n "INFO: Initializing new build..."
${pb}/scripts/mkbuild ${build_name}

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

exit 0
