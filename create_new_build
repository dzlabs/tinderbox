#!/bin/sh

usage () {
    echo "usage: $0 -n <build name> -j <jail name> -p <portstree name> [-d <build description>]"
    exit 1
}

if [ `id -u` != 0 ]; then
    echo "ERROR: You must be root to run $0."
    exit 1
fi

pb=/space

buil_name=""
jail=""
portstree=""
descr=""

while [ $# -gt 0 ]; do
    case "x$1" in
	x-n)
	  build_name="$2"; shift;
	  ;;
	x-j)
	  jail="$2"; shift;
	  ;;
	x-p)
	  portstree="$2"; shift;
	  ;;
	x-d)
	  descr="$2"; shift;
	  ;;
	*)
	  usage
	  ;;
    esac
    shift
done

if [ -z "${build_name}" -o -z "${jail}" -o -z "${portstree}" ]; then
    usage
fi

_builds=$(${pb}/scripts/tc listBuilds 2> /dev/null)
if echo ${_builds} | grep -qw ${build_name}; then
    echo "ERROR: Build, \"${build_name}\" already exists."
    exit 1
fi

echo -n "INFO: Creating directories for new build..."
rm -rf ${pb}/builds/${build_name}
rm -rf ${pb}/${build_name}

mkdir -p ${pb}/builds/${build_name}
mkdir -p ${pb}/${build_name}

echo "DONE."

# Add the new build to the datastore.
echo -n "INFO: Adding build to datastore..."
if [ ! -z "${descr}" ]; then
    descr="-d ${descr}"
fi
${pb}/scripts/tc addBuild -n ${build_name} -j ${jail} -p ${portstree} "${descr}"

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

echo "INFO: Initializing new build..."
${pb}/scripts/mkbuild ${build_name}

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

exit 0
