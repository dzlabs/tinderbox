#!/bin/sh
#-
# Copyright (c) 2004-2005 FreeBSD GNOME Team <freebsd-gnome@FreeBSD.org>
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# $MCom: portstools/tinderbox/create_new_portstree,v 1.11 2005/07/03 07:26:02 oliver Exp $
#


usage () {
    echo "usage: $0 -n <portstree name> [-d <description>] [-u <update command|CVSUP|NONE>] [-w <CVSweb URL>]"
    exit 1
}

if [ `id -u` != 0 ]; then
    echo "ERROR: You must be root to run $0."
    exit 1
fi

pb=/space

. ${pb}/scripts/tinderbox_shlib.sh

suphost=cvsup12.FreeBSD.org
cvsup_compress= #*default compress

portstree=""
descr=""
update_cmd=""
uc=""
url=""

while [ $# -gt 0 ]; do
    case "x$1" in
	x-n)
	  portstree="$2"; shift;
	  ;;
	x-d)
	  descr="$2"; shift;
	  ;;
	x-u)
	  update_cmd="$2"; shift;
	  ;;
	x-w)
	  url="$2"; shift;
	  ;;
	*)
	  usage
	  ;;
    esac
    shift
done

if [ -z "${portstree}" ]; then
    usage
fi

_portstrees=$(${pb}/scripts/tc listPortsTrees)
if echo ${_portstrees} | grep -qw ${portstree}; then
    echo "ERROR: Portstree, \"${portstree}\" already exists."
    exit 1
fi

if [ -z "${update_cmd}" -o "${update_cmd}" = "CVSUP" ]; then
    update_cmd="/usr/local/bin/cvsup -g ${pb}/portstrees/${portstree}/ports-supfile"
elif [ "${update_cmd}" = "NONE" ]; then
    update_cmd=""
    uc="-u NONE"
else
    update_cmd="${pb}/scripts/${update_cmd} ${portstree}"
    uc="-u ${update_cmd}"
fi

echo -n "INFO: Creating directories and supfile for new portstree..."
cleanup_mounts -d portstree -p ${portstree}
rm -rf ${pb}/portstrees/${portstree}

mkdir -p ${pb}/portstrees/${portstree}/ports

request_mount -q -r -d portstree -p ${portstree}

cat > ${pb}/portstrees/${portstree}/ports-supfile << EOSF
*default host=${suphost}
*default base=${pb}/portstrees/${portstree}
*default prefix=${pb}/portstrees/${portstree}
*default release=cvs tag=.
*default delete use-rel-suffix
${cvsup_compress}
ports-all
EOSF

echo "DONE."

if [ ! -z "${update_cmd}" ]; then
    echo -n "INFO: Updating portstree with ${update_cmd}..."
    eval ${update_cmd} > /dev/null 2>&1
    if [ $? != 0 ]; then
	echo "FAILED."
	exit 1
    fi
    echo "DONE."
fi

echo -n "INFO: Adding portstree to datastore..."
if [ ! -z "${descr}" ]; then
    descr="-d ${descr}"
fi
if [ ! -z "${url}" ]; then
    url="-w ${url}"
fi
${pb}/scripts/tc addPortsTree -n ${portstree} ${uc} ${url} "${descr}"

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

exit 0
