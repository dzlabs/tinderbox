#!/bin/sh

usage () {
    echo "usage: $0 -n <portstree name> [-d <description>] [-u <update command|CVSUP|NONE>]"
    exit 1
}

pb=/space
suphost=cvsup12.FreeBSD.org
cvsup_compress= #*default compress

portstree=""
descr=""
update_cmd=""
uc=""

while [ $# -gt 0 ]; do
    case "x$1" in
	x-n)
	  portstree="$2"; shift;
	  ;;
	x-d)
	  descr="$2"; shift;
	  ;;
	x-u)
	  update_cmd="$2"; shift;
	  ;;
	*)
	  usage
	  ;;
    esac
    shift
done

if [ -z "${portstree}" ]; then
    usage
fi

_portstrees=$(${pb}/scripts/tc listPortsTrees)
if echo ${_portstrees} | grep -qw ${portstree}; then
    echo "ERROR: Portstree, \"${portstree}\" already exists."
    exit 1
fi

if [ -z "${update_cmd}" -o "${update_cmd}" = "CVSUP" ]; then
    update_cmd="/usr/local/bin/cvsup -g ${pb}/portstrees/${portstree}/ports-supfile"
elif [ "${update_cmd}" = "NONE" ]; then
    update_cmd=""
    uc="-u NONE"
else
    update_cmd="${pb}/scripts/${update_cmd}"
    uc="-u ${update_cmd}"
fi

echo -n "INFO: Creating directories and supfile for new portstree..."
rm -rf ${pb}/portstrees/${portstree}

mkdir -p ${pb}/portstrees/${portstree}/ports

cat > ${pb}/portstrees/${portstree}/ports-supfile << EOSF
*default host=${suphost}
*default base=${pb}/portstrees/${portstree}
*default prefix=${pb}/portstrees/${portstree}
*default release=cvs tag=.
*default delete use-rel-suffix
${cvsup_compress}
ports-all
EOSF

echo "DONE."

if [ ! -z "${update_cmd}" ]; then
    echo -n "INFO: Updating portstree with ${update_cmd}..."
    eval ${update_cmd} ${portstree} > /dev/null 2>&1
    if [ $? != 0 ]; then
	echo "FAILED."
	exit 1
    fi
    echo "DONE."
fi

echo -n "INFO: Adding portstree to datastore..."
if [ ! -z "${descr}" ]; then
    descr="-d ${descr}"
fi
${pb}/scripts/tc addPortsTree -n ${portstree} ${uc} "${descr}"

if [ $? != 0 ]; then
    echo "FAILED."
    exit 1
fi

echo "DONE."

exit 0
