-- DROP TABLE ports CASCADE;
CREATE TABLE ports (
	port_id SERIAL PRIMARY KEY,
	port_directory VARCHAR(255) UNIQUE NOT NULL,
	port_name VARCHAR(64),
	port_maintainer VARCHAR(128),
	port_comment VARCHAR(255)
);

-- DROP TABLE jails CASCADE;
CREATE TABLE jails (
	jail_id SERIAL PRIMARY KEY,
	jail_name VARCHAR(32) UNIQUE NOT NULL,
	jail_tag VARCHAR(32),
	jail_last_built TIMESTAMP,
	jail_update_cmd VARCHAR(255) DEFAULT 'CVSUP',
	jail_description TEXT,
	jail_src_mount TEXT
);

-- DROP TABLE ports_trees CASCADE;
CREATE TABLE ports_trees (
	ports_tree_id SERIAL PRIMARY KEY,
	ports_tree_name VARCHAR(32) UNIQUE NOT NULL,
	ports_tree_description TEXT,
	ports_tree_last_built TIMESTAMP,
	ports_tree_update_cmd VARCHAR(255) DEFAULT 'CVSUP',
	ports_tree_cvsweb_url VARCHAR(255),
	ports_tree_ports_mount TEXT
);

-- DROP TABLE builds CASCADE;
CREATE TABLE builds (
	build_id SERIAL PRIMARY KEY,
	build_name VARCHAR(32) UNIQUE NOT NULL,
	jail_id INTEGER REFERENCES jails(jail_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	ports_tree_id INTEGER REFERENCES ports_trees(ports_tree_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	build_description TEXT,
	build_status VARCHAR(16) CHECK (build_status IN ('IDLE','PREPARE','PORTBUILD')) DEFAULT 'IDLE',
	build_current_port VARCHAR(255)
);

-- DROP TABLE users CASCADE;
CREATE TABLE users (
	user_id SERIAL PRIMARY KEY,
	user_name VARCHAR(16) UNIQUE NOT NULL,
	user_email VARCHAR(255),
	user_password VARCHAR(41),
	user_www_enabled BOOLEAN NOT NULL default FALSE
);

-- DROP TABLE hosts CASCADE;
CREATE TABLE hosts (
	host_id SERIAL PRIMARY KEY,
	host_name VARCHAR(255) NOT NULL
);
CREATE INDEX hosts_host_name_idx ON hosts(host_name);

-- DROP TABLE user_permissions CASCADE;
CREATE TABLE user_permissions (
	user_id INTEGER REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	host_id INTEGER REFERENCES hosts(host_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	user_permission_object_type VARCHAR(16) CHECK (user_permission_object_type IN ('builds', 'users')),
	user_permission_object_id INTEGER NOT NULL DEFAULT '0',
	user_permission INTEGER NOT NULL DEFAULT '0',
	PRIMARY KEY  (user_id,user_permission_object_type,user_permission_object_id,user_permission,host_id)
);

-- DROP TABLE build_users CASCADE;
CREATE TABLE build_users (
	build_user_id SERIAL PRIMARY KEY,
	build_id INTEGER REFERENCES builds(build_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	user_id INTEGER REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	email_on_completion BOOLEAN DEFAULT TRUE,
	email_on_error BOOLEAN DEFAULT TRUE
);

-- DROP TABLE build_ports CASCADE;
CREATE TABLE build_ports (
	build_port_id SERIAL PRIMARY KEY,
	build_id INTEGER REFERENCES builds(build_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	port_id INTEGER REFERENCES ports(port_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	last_built TIMESTAMP,
	last_status VARCHAR(16) CHECK (last_status IN ('UNKNOWN','SUCCESS','FAIL','BROKEN', 'LEFTOVERS')) DEFAULT 'UNKNOWN',
	last_successful_built TIMESTAMP,
	last_built_version VARCHAR(100)
);

-- DROP TABLE config CASCADE;
CREATE TABLE config (
	config_option_name VARCHAR(255) NOT NULL,
	config_option_value TEXT,
	host_id INTEGER REFERENCES hosts(host_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	PRIMARY KEY (config_option_name, host_id)
);

-- DROP TABLE build_ports_queue CASCADE;
CREATE TABLE build_ports_queue (
	build_ports_queue_id SERIAL PRIMARY KEY,
	enqueue_date TIMESTAMP,
	completion_date TIMESTAMP,
	build_id INTEGER REFERENCES builds(build_id) ON UPDATE CASCADE,
	user_id INTEGER REFERENCES users(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
	port_directory VARCHAR(255) NOT NULL,
	priority INTEGER NOT NULL DEFAULT '10',
	host_id INTEGER REFERENCES hosts(host_id) ON UPDATE CASCADE,
	email_on_completion BOOLEAN NOT NULL,
	status VARCHAR(16) CHECK (status IN ('ENQUEUED','PROCESSING','SUCCESS','FAIL')) DEFAULT 'ENQUEUED'
);
CREATE INDEX build_ports_queue_host_id_idx ON build_ports_queue(host_id);
CREATE INDEX build_ports_queue_user_id_idx ON build_ports_queue(user_id);

INSERT INTO hosts VALUES (-1, '__ALL__');

----
-- Supported config commands.  If any new commands are added here,
-- __DSVERSION__ must be bumped.  Use micro version bumps for new config
-- commands, and minor version bumps for schema changes.
----
INSERT INTO config VALUES ('__DSVERSION__', '3.0', -1);
INSERT INTO config VALUES ('CCACHE_ENABLED', '0', -1);
INSERT INTO config VALUES ('CCACHE_DIR', '', -1);
INSERT INTO config VALUES ('CCACHE_NOLINK', '1', -1);
INSERT INTO config VALUES ('CCACHE_MAX_SIZE', '1G', -1);
INSERT INTO config VALUES ('CCACHE_JAIL', '0', -1);
INSERT INTO config VALUES ('CCACHE_LOGFILE', '', -1);
INSERT INTO config VALUES ('DISTFILE_CACHE', '', -1);
INSERT INTO config VALUES ('TINDERD_SLEEPTIME', '120', -1);
INSERT INTO config VALUES ('JAIL_OBJDIR', '', -1);
